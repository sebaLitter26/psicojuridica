# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Building {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  address: String!
  location: String!
  floors: Float!
  letter: String!
  images: [String!]
  appartments: [Appartment!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Appartment {
  id: ID
  createdAt: DateTime
  updatedAt: DateTime
  floor: Float
  letter: String
  observation: String
  users: [User!]
  building: Building
  buildingId: ID
}

type User {
  id: ID!
  name: String!
  email: String!
  notes: String
  picture: String!

  """Ex: +5491165404122"""
  phone: String

  """Rol del Usuario"""
  rol: Roles!
  isActive: Boolean!

  """Id del ultimo user que llamo a updateUser"""
  modifierId: ID

  """appartmentId"""
  appartmentId: ID

  """appartment"""
  appartment: Appartment
  createdAt: DateTime!
  updatedAt: DateTime
}

"""Roles validos para el usuario (admin, owner, tenant). """
enum Roles {
  admin
  tenant
  owner
}

type Query {
  users(roles: [Roles!]): [User!]!
  user(id: ID!): User!
  oAuthLogin(token: String!): User!
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  updateUser(input: UpdateUserInput!): User!
  blockUser(id: ID!): User!
}

input CreateUserInput {
  email: String!
  name: String!
  picture: String!
}

input UpdateUserInput {
  email: String
  name: String
  picture: String
  id: ID!
  modifierId: ID!
  appartmentId: ID!
  rol: Roles
  isActive: Boolean
  phone: String
}